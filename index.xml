<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zijian Hu on Zijian Hu</title>
    <link>/</link>
    <description>Recent content in Zijian Hu on Zijian Hu</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Jun 2019 00:00:00 -0700</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Decentralized Federated Multi-Task Learning and System Design
</title>
      <link>/project/dpa_sgd/</link>
      <pubDate>Fri, 07 Jun 2019 00:00:00 -0700</pubDate>
      
      <guid>/project/dpa_sgd/</guid>
      <description>&lt;p&gt;Within the field of Human-Robot Interaction (HRI), a growing subfield is forming that focuses
specifically on interactions between one or more robots and multiple people, known as Multi-Party
Human-Robot Interaction (MP-HRI). MP-HRI encompasses the challenges of single-user HRI
(interaction dynamics, human perception, etc.) and extends them to the challenges of multi-party
interactions (within-group turn taking, dyadic dynamics, and group dynamics).&lt;/p&gt;

&lt;p&gt;To address these, MP-HRI requires new methods and approaches. Effective MP-HRI enables robotic systems
to function in many contexts, including service, support, and mediation. In realistic human contexts,
service and support robots need to work with varying numbers of individuals, particularly when working
within team structures. In mediation, robotic systems must by definition, be able to work with multiple
parties. These contexts often overlap, and algorithms that work in one context can benifit work in another.&lt;/p&gt;

&lt;p&gt;This project will advance the basic research in trust and influence in MP-HRI contexts. This will involve
exploring how robots and people establish, maintain, and repair trust in MP-HRI. Specifically, this research
will examine robot group mediation for group conseling, with extensions to team performance in robot
service and support teams.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;http://robotics.usc.edu/interaction/sponsors/desc.php?name=nrikids&#34; target=&#34;_blank&#34;&gt;Interaction Lab website&lt;/a&gt; for details
and related publications&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>
Socially Aware, Expressive, and Personalized Mobile Remote Presence:
Co-Robots as Gateways to Access to K-12 In-School Education
</title>
      <link>/project/nri_kids/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 -0700</pubDate>
      
      <guid>/project/nri_kids/</guid>
      <description>&lt;p&gt;Within the field of Human-Robot Interaction (HRI), a growing subfield is forming that focuses
specifically on interactions between one or more robots and multiple people, known as Multi-Party
Human-Robot Interaction (MP-HRI). MP-HRI encompasses the challenges of single-user HRI
(interaction dynamics, human perception, etc.) and extends them to the challenges of multi-party
interactions (within-group turn taking, dyadic dynamics, and group dynamics).&lt;/p&gt;

&lt;p&gt;To address these, MP-HRI requires new methods and approaches. Effective MP-HRI enables robotic systems
to function in many contexts, including service, support, and mediation. In realistic human contexts,
service and support robots need to work with varying numbers of individuals, particularly when working
within team structures. In mediation, robotic systems must by definition, be able to work with multiple
parties. These contexts often overlap, and algorithms that work in one context can benifit work in another.&lt;/p&gt;

&lt;p&gt;This project will advance the basic research in trust and influence in MP-HRI contexts. This will involve
exploring how robots and people establish, maintain, and repair trust in MP-HRI. Specifically, this research
will examine robot group mediation for group conseling, with extensions to team performance in robot
service and support teams.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;http://robotics.usc.edu/interaction/sponsors/desc.php?name=nrikids&#34; target=&#34;_blank&#34;&gt;Interaction Lab website&lt;/a&gt; for details
and related publications&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Infant-Robot Interaction as an Early Intervention Strategy</title>
      <link>/project/baby/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 -0700</pubDate>
      
      <guid>/project/baby/</guid>
      <description>&lt;p&gt;Infants engage in motor babbling that allows them to explore their space and learn what movements produce
desired outcomes. Less motor babbling from infants can lead to developmental delays.
Our goal is to develop a socially assistive, non-contact, infant-robot interaction system to provide contingent
positive feedback to increase exploration and expand early movement practice.&lt;/p&gt;

&lt;p&gt;Towards this end, we are collaborating with physical therapists to create approaches to predict the developmental
status of infants using wearable sensors; running user studies that explore various robot rewards for contingent
activities for the infant, as well as measuring the infant&amp;rsquo;s ability to mimic the robot; and using reinforcement
learning to adjust the difficulty of the task presented by the robot to increase the infant&amp;rsquo;s engagement with
the task.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;http://robotics.usc.edu/interaction/sponsors/desc.php?name=babies&#34; target=&#34;_blank&#34;&gt;Interaction Lab website&lt;/a&gt;
for details and related publications&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trust in Multi-Party Human-Robot Interaction</title>
      <link>/project/multi_party/</link>
      <pubDate>Tue, 26 Mar 2019 00:00:00 -0700</pubDate>
      
      <guid>/project/multi_party/</guid>
      <description>&lt;p&gt;Within the field of Human-Robot Interaction (HRI), a growing subfield is forming that focuses
specifically on interactions between one or more robots and multiple people, known as Multi-Party
Human-Robot Interaction (MP-HRI). MP-HRI encompasses the challenges of single-user HRI
(interaction dynamics, human perception, etc.) and extends them to the challenges of multi-party
interactions (within-group turn taking, dyadic dynamics, and group dynamics).&lt;/p&gt;

&lt;p&gt;To address these, MP-HRI requires new methods and approaches. Effective MP-HRI enables robotic systems
to function in many contexts, including service, support, and mediation. In realistic human contexts,
service and support robots need to work with varying numbers of individuals, particularly when working
within team structures. In mediation, robotic systems must by definition, be able to work with multiple
parties. These contexts often overlap, and algorithms that work in one context can benifit work in another.&lt;/p&gt;

&lt;p&gt;This project will advance the basic research in trust and influence in MP-HRI contexts. This will involve
exploring how robots and people establish, maintain, and repair trust in MP-HRI. Specifically, this research
will examine robot group mediation for group conseling, with extensions to team performance in robot
service and support teams.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&#34;http://robotics.usc.edu/interaction/projects/desc2.php?name=multiparty_support&#34; target=&#34;_blank&#34;&gt;Interaction Lab website&lt;/a&gt;
for details and related publications&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NAO Tutorial: Getting Started with NAO &#43; ROS</title>
      <link>/post/nao-tutorial/getting-started/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 -0800</pubDate>
      
      <guid>/post/nao-tutorial/getting-started/</guid>
      <description>

&lt;p&gt;This tutorial shows how to work with Physical NAO.&lt;/p&gt;

&lt;p&gt;Make sure you have installed all the dependencies and configured &lt;strong&gt;PYTHONPATH&lt;/strong&gt; system variable correctly&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;see &lt;a href=&#34;/post/nao-tutorial/installation&#34;&gt;installation guide&lt;/a&gt; for detail&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;controlling-robot&#34;&gt;Controlling Robot&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Turn on the robot. See &lt;a href=&#34;http://doc.aldebaran.com/2-1/nao/getting_out_of_the_box.html&#34; target=&#34;_blank&#34;&gt;this guide&lt;/a&gt; for detail&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Start the robot bridge on your computer&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ roslaunch nao_bringup nao_full_py.launch nao_ip:=&amp;lt;robot_ip&amp;gt; \
roscore_ip:=&amp;lt;roscore_ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will start the robot&amp;rsquo;s default configuration with the following publisher:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;joint_states&lt;/li&gt;
&lt;li&gt;tf&lt;/li&gt;
&lt;li&gt;top camera&lt;/li&gt;
&lt;li&gt;bottom camera&lt;/li&gt;
&lt;li&gt;left sonar&lt;/li&gt;
&lt;li&gt;right sonar&lt;/li&gt;
&lt;li&gt;microphone&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To visualize the robot, open &lt;strong&gt;rviz&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rosrun rviz rviz
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;In top bar, go to &lt;code&gt;File-&amp;gt;Open Config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;navigate to &lt;code&gt;&amp;lt;your catkin workspace&amp;gt;/src/nao_robot/nao_description/config&lt;/code&gt; and open the file with &lt;strong&gt;.rviz&lt;/strong&gt; extension

&lt;ul&gt;
&lt;li&gt;make sure you have &lt;a href=&#34;http://wiki.ros.org/nao_meshes&#34; target=&#34;_blank&#34;&gt;nao_meshes&lt;/a&gt; installed&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;you should see something similar to the below screenshot
&lt;img src=&#34;http://wiki.ros.org/nao/Tutorials/Getting-Started?action=AttachFile&amp;amp;do=get&amp;amp;target=NaoRviz.png&#34; alt=&#34;NAO rviz&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Controlling the robot&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;execute &lt;code&gt;rosnode list&lt;/code&gt; to check if &lt;strong&gt;/nao_walker&lt;/strong&gt; node is running&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To turn on the motors&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rosservice call /body_stiffness/enable &amp;quot;{}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To turn off the motors&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rosservice call /body_stiffness/disable &amp;quot;{}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;once the motors are on, use the following command to move the robot in x-direction&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rostopic pub -1 /cmd_vel geometry_msgs/Twist \
&#39;{linear: {x: 1.0, y: 0.0, z: 0.0}, \
angular: {x: 0.0, y: 0.0, z: 0.0}}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To stop the robot, run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ rostopic pub -1 /cmd_vel geometry_msgs/Twist \
&#39;{linear: {x: 0.0, y: 0.0, z: 0.0}, \
angular: {x: 0.0, y: 0.0, z: 0.0}}&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;next-naoqi-sdk-guide-post-nao-tutorial-nao-sdk&#34;&gt;Next: &lt;a href=&#34;/post/nao-tutorial/nao-sdk&#34;&gt;NAOqi SDK Guide&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.ros.org/nao/Tutorials/Getting-Started&#34; target=&#34;_blank&#34;&gt;Getting started with ROS for Nao, including NAOqi and rviz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.ros.org/nao_bringup&#34; target=&#34;_blank&#34;&gt;nao_bringup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>NAO Tutorial: Installation</title>
      <link>/post/nao-tutorial/installation/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 -0800</pubDate>
      
      <guid>/post/nao-tutorial/installation/</guid>
      <description>

&lt;h2 id=&#34;installing-the-sdk&#34;&gt;Installing the SDK&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Make sure you have the following installed&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.python.org/download/releases/2.7/&#34; target=&#34;_blank&#34;&gt;Python 2.7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cmake.org/&#34; target=&#34;_blank&#34;&gt;CMake&lt;/a&gt; version 2.8.3 or higher
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Download the following from &lt;a href=&#34;https://community.aldebaran.com/en/resources/software&#34; target=&#34;_blank&#34;&gt;Aldebaran Community&lt;/a&gt; website (&lt;em&gt;you need to register an account in order to download the files&lt;/em&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;pynaoqi-python-2.7-naoqi-2.1.2.x-linux64.tar.gz&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;naoqi-sdk-2.1.2.x-linux64.tar.gz&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;[optional] &lt;strong&gt;choregraphe-suite-[2.1.4 or 2.1.2].x-linux64.tar&lt;/strong&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Execute the following command and replace &lt;strong&gt;2.1.2.x&lt;/strong&gt; with the version you downloaded&lt;/p&gt;

&lt;p&gt;Unzip the tar files&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir ~/naoqi
$ tar xzf &amp;lt;path to NAOqi C++ SDK&amp;gt;/naoqi-sdk-2.1.2.x-linux64.tar -C ~/naoqi/naoqi-sdk-2.1.2-linux64
$ tar xzf &amp;lt;path to NAOqi Python SDK&amp;gt;/pynaoqi-python2.7-2.1.2-linux64.tar -C ~/naoqi/naoqi-sdk-2.1.2-linux64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Check the installation by executing NAOqi&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ~/naoqi/naoqi-sdk-2.1.2.17-linux64/naoqi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see output similiar to&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Starting NAOqi version 2.1.2.17
.
.
.
NAOqi is ready...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Press &lt;strong&gt;CTRL-C&lt;/strong&gt; to exit&lt;/p&gt;

&lt;p&gt;Now we need to add &lt;strong&gt;NAOqi SDK&lt;/strong&gt; to system variables. Add the following lines at the end of &lt;strong&gt;~/.bashrc&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ export PYTHONPATH=~/naoqi/pynaoqi-python2.7-2.1.2-linux64:$PYTHONPATH
$ export AL_DIR=~/naoqi/naoqi-sdk-2.1.2-linux64
$ export AL_DIR_SIM=~/naoqi/naoqi-sdk-2.1.2-linux64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Execute &lt;code&gt;source ~/.bashrc&lt;/code&gt; to apply the changes&lt;/p&gt;

&lt;p&gt;Verify &lt;em&gt;in python console&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import naoqi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if correctly installed, there should be no error&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;install-ros&#34;&gt;Install ROS&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;See &lt;a href=&#34;http://wiki.ros.org/kinetic/Installation&#34; target=&#34;_blank&#34;&gt;Official ROS Installation Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-nao-package-for-ros&#34;&gt;Install &lt;strong&gt;NAO package&lt;/strong&gt; for ROS&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install the packages needed&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;replace kinetic to your ROS version if needed&lt;/em&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt-get install ros-kinetic-driver-base ros-kinetic-move-base-msgs \
ros-kinetic-octomap ros-kinetic-octomap-msgs ros-kinetic-humanoid-msgs \
ros-kinetic-humanoid-nav-msgs ros-kinetic-camera-info-manager \
ros-kinetic-camera-info-manager-py
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install the main package&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt-get install ros-kinetic-nao-robot
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install packages for robot control&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt-get install ros-kinetic-nao-bringup ros-kinetic-naoqi-pose \
ros-kinetic-nao-interaction ros-kinetic-nao-moveit-config \
ros-kinetic-naoqi-driver ros-kinetic-naoqi-driver-py \
ros-kinetic-naoqi-sensors-py ros-kinetic-nao-dcm-bringup \
ros-kinetic-moveit
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install packages for simulation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Notice: to install nao_meshes package, you need to agree the policy&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ sudo apt-get install ros-kinetic-rospack ros-kinetic-nao-meshes
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;next-getting-started-post-nao-tutorial-getting-started&#34;&gt;Next: &lt;a href=&#34;/post/nao-tutorial/getting-started/&#34;&gt;Getting Started&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://doc.aldebaran.com/2-1/dev/python/install_guide.html&#34; target=&#34;_blank&#34;&gt;Python SDK Install Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://doc.aldebaran.com/2-1/dev/cpp/install_guide.html&#34; target=&#34;_blank&#34;&gt;C++ SDK Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.ros.org/nao/Tutorials/Installation&#34; target=&#34;_blank&#34;&gt;Installation of ROS for usage with or on a NAO robot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>NAO Tutorial: NAOqi SDK</title>
      <link>/post/nao-tutorial/nao-sdk/</link>
      <pubDate>Wed, 23 Jan 2019 00:00:00 -0800</pubDate>
      
      <guid>/post/nao-tutorial/nao-sdk/</guid>
      <description>

&lt;h2 id=&#34;before-starting&#34;&gt;Before starting&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Make sure you have &lt;strong&gt;Choregraphe suite&lt;/strong&gt; installed

&lt;ul&gt;
&lt;li&gt;See &lt;a href=&#34;http://doc.aldebaran.com/2-1/getting_started/installing.html&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt; for detail&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!--## Hello World Example--&gt;

&lt;h3 id=&#34;using-choregraphe&#34;&gt;Using Choregraphe&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Follow &lt;a href=&#34;http://doc.aldebaran.com/2-1/getting_started/helloworld_choregraphe.html&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;using-python-in-choregraphe&#34;&gt;Using Python in Choregraphe&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Follow &lt;a href=&#34;http://doc.aldebaran.com/2-1/getting_started/helloworld_choregraphe_script.html&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;using-dialog-topic-in-choregraphe&#34;&gt;Using Dialog topic in Choregraphe&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Follow &lt;a href=&#34;http://doc.aldebaran.com/2-1/getting_started/helloworld_choregraphe_dialog.htmll&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;using-python&#34;&gt;Using Python&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Follow &lt;a href=&#34;http://doc.aldebaran.com/2-1/getting_started/helloworld_python.html&#34; target=&#34;_blank&#34;&gt;this tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://doc.aldebaran.com/2-1/getting_started/installing.html&#34; target=&#34;_blank&#34;&gt;Choregraphe Suite Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://doc.aldebaran.com/2-1/getting_started/helloworld_choregraphe.html&#34; target=&#34;_blank&#34;&gt;Hello World 1 - using Choregraphe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
